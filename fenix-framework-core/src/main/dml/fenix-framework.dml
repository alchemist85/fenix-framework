package pt.ist.fenixframework.pstm;


valueType java.lang.reflect.Method as PredicateMethod {
    externalizeWith {
        String toString();
    }
    internalizeWith pt.ist.fenixframework.Externalization.internalizePredicateMethod();
}



class PersistentRoot {
	String rootKey;
}


class DomainFenixFrameworkRoot {
}

class DomainMetaClass {
	String domainClassName;
	Integer metaObjectCount;
	Boolean finalized;
}

class consistencyPredicates.DomainConsistencyPredicate {
	PredicateMethod predicate;
	String ojbConcreteClass;
}

	class consistencyPredicates.PublicConsistencyPredicate extends consistencyPredicates.DomainConsistencyPredicate {
	}
	
	class consistencyPredicates.FinalConsistencyPredicate extends consistencyPredicates.PublicConsistencyPredicate {
	}
	
	class consistencyPredicates.PrivateConsistencyPredicate extends consistencyPredicates.DomainConsistencyPredicate {
	}
	
class consistencyPredicates.DomainDependenceRecord {
	Boolean consistent;
}

class DomainMetaObject {
}





relation MultipleRoots {
	PersistentRoot playsRole previous;
	PersistentRoot playsRole next;
}


relation PersistentRootAbstractDomainObject {
 AbstractDomainObject playsRole rootObject;
 PersistentRoot playsRole;
}



relation DomainFenixFrameworkRootDomainMetaClasses {
	DomainFenixFrameworkRoot playsRole domainFenixFrameworkRoot;
	DomainMetaClass playsRole domainMetaClasses {
		multiplicity*;
	}
}


relation DomainMetaSuperclassDomainMetaSubclasses {
	DomainMetaClass playsRole domainMetaSuperclass;
	DomainMetaClass playsRole domainMetaSubclasses {
		multiplicity*;
	}
}

relation DomainMetaClassDomainMetaObjects {
	DomainMetaObject playsRole existingDomainMetaObjects {
		multiplicity*;
	}
	DomainMetaClass playsRole domainMetaClass;
}



relation DomainMetaClassDeclaredConsistencyPredicates {
	DomainMetaClass playsRole domainMetaClass;
	consistencyPredicates.DomainConsistencyPredicate playsRole declaredConsistencyPredicates {
		multiplicity*;
	}
}

relation PublicConsistencyPredicateOverriddenPublicConsistencyPredicatesOverriding {
	consistencyPredicates.PublicConsistencyPredicate playsRole publicConsistencyPredicateOverridden;
	consistencyPredicates.PublicConsistencyPredicate playsRole publicConsistencyPredicatesOverriding {
		multiplicity*;
	}
}

relation DomainConsistencyPredicateDomainDependenceRecords {
	consistencyPredicates.DomainConsistencyPredicate playsRole domainConsistencyPredicate;
	consistencyPredicates.DomainDependenceRecord playsRole domainDependenceRecords {
		multiplicity*;
	}
}

relation DomainConsistencyPredicateInconsistentDependenceRecords {
	consistencyPredicates.DomainConsistencyPredicate playsRole inconsistentPredicate;
	consistencyPredicates.DomainDependenceRecord playsRole inconsistentDependenceRecords {
		multiplicity*;
	}
}

relation DependentDomainMetaObjectOwnDependenceRecords {
	DomainMetaObject playsRole dependentDomainMetaObject;
	consistencyPredicates.DomainDependenceRecord playsRole ownDependenceRecords {
		multiplicity*;
	}
}

relation DependedDomainMetaObjectsDependingDependenceRecords {
	DomainMetaObject playsRole dependedDomainMetaObjects {
		multiplicity*;
	}
	consistencyPredicates.DomainDependenceRecord playsRole dependingDependenceRecords {
		multiplicity*;
	}
}

relation DomainMetaObjectAbstractDomainObject {
	AbstractDomainObject playsRole domainObject;
	DomainMetaObject playsRole;
}
